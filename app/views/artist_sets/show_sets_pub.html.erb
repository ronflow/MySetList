<!-- filepath: c:\DEV\MySetList\app\views\artist_sets\show_sets_pub.html.erb -->
<!-- 
  VIEW: Buscar e Inserir M√∫sicas do Banco de Dados no Set
  Funcionalidade: Permite gerenciar m√∫sicas de um setlist espec√≠fico
  Controller: ArtistSetsController
  Action: show_sets_pub
-->

<!-- =========================== -->
<!-- SE√á√ÉO: MENSAGENS DE FEEDBACK -->
<!-- =========================== -->
<!-- Exibe mensagens de sucesso (verde) e erro (vermelho) vindas do controller -->
<p style="color: green"><%= notice %></p>
<p style="color: red"><%= alert %></p>

<!-- =========================== -->
<!-- SE√á√ÉO: CABE√áALHO DA P√ÅGINA -->
<!-- =========================== -->
<div>
  <!-- T√≠tulo principal da funcionalidade -->
  <h1>üìã Buscar e Inserir do Banco de Dados</h1>
  <!-- Nome do setlist atual sendo editado -->
  <h2><%= @artist_set.set_list_name %></h2>
  
  <!-- ‚úÖ EXIBIR TAGS DO SETLIST -->
  <% if @artist_set.set_tags.present? %>
    <div style="margin-bottom: 15px;">
      <strong>üè∑Ô∏è Tags:</strong>
      <% @artist_set.set_tags.split(',').map(&:strip).each do |tag| %>
        <span style="background-color: #e9ecef; color: #495057; padding: 4px 8px; border-radius: 4px; font-size: 14px; margin-right: 5px;">
          <%= tag %>
        </span>
      <% end %>
    </div>
  <% end %>
</div>

<!-- Bot√£o de navega√ß√£o para voltar √† lista de sets do artista -->
<div>
  <%= link_to "Voltar para Sets", artist_path(@artist_set.artist), 
    role: "button" %>
</div>

<hr>

<!-- ========================================= -->
<!-- SE√á√ÉO 1: M√öSICAS ATUALMENTE NO SET -->
<!-- ========================================= -->
<!-- T√≠tulo com contador din√¢mico de m√∫sicas no set -->
<h2>M√∫sicas no Set (<%= @songs.count %>)</h2>

<!-- FUNCIONALIDADE: Busca espec√≠fica dentro do set atual -->
<%= form_with url: show_sets_pub_artist_artist_set_path(@artist_set.artist, @artist_set), method: :get, local: true do %>
  <%= label_tag :search_set, "Buscar m√∫sicas no set" %>
  <!-- Campo de busca que filtra apenas m√∫sicas j√° adicionadas ao set -->
  <%= text_field_tag :search_set, params[:search_set] %>
  <%= submit_tag "Buscar no Set", role: "button" %>
<% end %>

<br>

<!-- CONDICIONAL: S√≥ exibe tabela se houver m√∫sicas no set -->
<% if @songs.present? %>
  <!-- Container com scroll vertical para tabelas grandes -->
  <div style="max-height: 400px; overflow-y: auto; border: 1px solid #ccc;">
    <table>
      <thead>
        <tr>
          <th>M√∫sica</th>      <!-- Nome da m√∫sica -->
          <th>Banda</th>       <!-- Nome da banda/artista -->
          <th>Status</th>      <!-- Status da m√∫sica no repert√≥rio do artista -->
          <th>A√ß√µes</th>       <!-- Bot√µes de a√ß√£o (remover, ver letra, editar) -->
        </tr>
      </thead>
      <tbody>
        <!-- LOOP: Itera por cada m√∫sica no set atual -->
        <% @songs.each do |song| %>
          <!-- Verifica se a m√∫sica j√° est√° no repert√≥rio geral do artista -->
          <% artist_song = @artist.artist_songs.find_by(song: song) %>
          <tr>
            <!-- COLUNA 1: Nome da m√∫sica em negrito -->
            <td><strong><%= song.name %></strong></td>
            
            <!-- COLUNA 2: Nome da banda -->
            <td><%= song.band %></td>
            
            <!-- COLUNA 3: Status da m√∫sica -->
            <td>
              <% if artist_song %>
                <!-- M√∫sica j√° est√° no repert√≥rio geral do artista -->
                <span style="color: green;">‚úÖ Adicionada</span>
                <!-- Indica se h√° letra personalizada -->
                <% if artist_song.letra.present? %>
                  <br><small style="color: #666;">Letra personalizada</small>
                <% end %>
              <% else %>
                <!-- M√∫sica s√≥ existe no set, n√£o no repert√≥rio geral -->
                <span style="color: orange;">‚ö†Ô∏è Apenas no set</span>
              <% end %>
            </td>
            
            <!-- COLUNA 4: Bot√µes de a√ß√£o -->
            <td>
              <!-- BOT√ÉO: Remover m√∫sica do set -->
              <%= button_to "Remover do Set", remover_musicas_artist_artist_set_path(@artist_set.artist, @artist_set), 
                  method: :delete, 
                  params: { song_ids: [song.id] },
                  style: "background-color: #dc3545; color: white; padding: 4px 8px; border: none; border-radius: 4px; cursor: pointer; font-size: 12px;",
                  confirm: "Remover '#{song.name}' do set?",
                  local: true %>
                  
              <!-- BOT√ÉO: Ver letra (s√≥ aparece se m√∫sica estiver no repert√≥rio) -->
              <% if artist_song %>
                <%= link_to "Ver Letra", artist_song_path(artist_song), 
                    style: "background-color: #0056b3; color: white; padding: 4px 8px; text-decoration: none; border-radius: 4px; font-size: 12px; margin-left: 5px;" %>
              <% end %>
              
              <!-- BOT√ÉO: Editar letra (s√≥ aparece se m√∫sica estiver no repert√≥rio) -->
              <% if artist_song %>
                <%= link_to "Editar Letra", edit_lyrics_artist_song_path(artist_song), 
                    style: "background-color: #28a745; color: white; padding: 4px 8px; text-decoration: none; border-radius: 4px; font-size: 12px; margin-left: 5px;" %>
              <% end %>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
<% else %>
  <!-- MENSAGEM: Quando n√£o h√° m√∫sicas no set ou busca n√£o retorna resultados -->
  <p style="color: gray; font-style: italic;">
    <%= params[:search_set].present? ? "Nenhuma m√∫sica encontrada no set." : "Nenhuma m√∫sica no set ainda." %>
  </p>
<% end %>

<!-- ========================================= -->
<!-- SE√á√ÉO: FUNCIONALIDADE DE EXPORTA√á√ÉO XML -->
<!-- ========================================= -->
<!-- CONDICIONAL: S√≥ mostra bot√£o se houver m√∫sicas no set -->
<% if @songs.present? %>
  <div style="margin-top: 15px;">
    <!-- BOT√ÉO: Gera arquivo XML do setlist para download -->
    <%= link_to "Gerar XML", 
        generate_xml_artist_artist_set_path(@artist_set.artist, @artist_set),
        method: :get,
        style: "background-color: #6f42c1; color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; font-size: 14px; display: inline-block;",
        title: "Gerar arquivo #{@artist_set.set_list_name}.xml" %>
  </div>
<% end %>

<hr>

<!-- ================================================ -->
<!-- SE√á√ÉO 2: ADICIONAR M√öSICAS DO BANCO DE DADOS -->
<!-- ================================================ -->
<h2>Adicionar M√∫sicas ao Set</h2>

<!-- FUNCIONALIDADE: Busca geral no banco de m√∫sicas -->
<%= form_with url: show_sets_pub_artist_artist_set_path(@artist_set.artist, @artist_set), method: :get, local: true do %>
  <%= label_tag :query, "Buscar m√∫sica" %>
  <!-- Campo de busca que filtra todas as m√∫sicas do banco -->
  <%= text_field_tag :query, params[:query] %>
  <%= submit_tag "Buscar", role: "button" %>
<% end %>

<!-- CONDICIONAL: S√≥ exibe se houver m√∫sicas encontradas -->
<% if @all_songs.present? %>
  <!-- T√≠tulo din√¢mico baseado se √© busca ou listagem completa -->
  <h3>
    <%= if params[:query].present?
          "M√∫sicas encontradas (#{@all_songs.count})"
        else
          "Todas as m√∫sicas dispon√≠veis (#{@all_songs.count})"
        end %>
  </h3>
  
  <!-- FORMUL√ÅRIO: Sele√ß√£o m√∫ltipla de m√∫sicas para adicionar ao set -->
  <%= form_with url: adicionar_musicas_artist_artist_set_path(@artist_set.artist, @artist_set), 
      method: :post, local: true, id: "multiple-songs-form" do |form| %>
    
    <!-- ============================== -->
    <!-- SE√á√ÉO: CONTROLES DE SELE√á√ÉO -->
    <!-- ============================== -->
    <div>
      <!-- BOT√ÉO: Seleciona todas as m√∫sicas (incluindo as j√° no set) -->
      <button type="button" id="select-all-btn" 
              style="background-color: #007bff; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; margin-right: 10px;">Selecionar Todas</button>
              
      <!-- BOT√ÉO: Desmarca todas as sele√ß√µes -->
      <button type="button" id="deselect-all-btn" 
              style="background-color: #6c757d; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; margin-right: 10px;">Desmarcar Todas</button>
              
      <!-- BOT√ÉO: Seleciona apenas m√∫sicas dispon√≠veis (n√£o j√° no set) -->
      <button type="button" id="select-available-btn" 
              style="background-color: #ffc107; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; margin-right: 10px;">Selecionar Apenas Dispon√≠veis</button>
              
      <!-- BOT√ÉO: Submete o formul√°rio com as m√∫sicas selecionadas -->
      <%= form.submit "Inserir M√∫sicas Selecionadas", 
          id: "submit-selected-btn", 
          style: "background-color: #28a745; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer;",
          confirm: "Adicionar m√∫sicas selecionadas ao set?" %>
          
      <!-- CONTADOR: Mostra quantas m√∫sicas est√£o selecionadas -->
      <span id="selected-count" style="margin-left: 10px; font-weight: bold; color: #007bff;">0 m√∫sicas selecionadas</span>
    </div>
  
    <!-- ============================== -->
    <!-- SE√á√ÉO: TABELA DE M√öSICAS -->
    <!-- ============================== -->
    <!-- Container com scroll para tabelas grandes -->
    <div style="max-height: 400px; overflow-y: auto; border: 1px solid #ccc;">
      <table>
        <thead>
          <tr>
            <!-- COLUNA: Checkbox para sele√ß√£o m√∫ltipla -->
            <th style="width: 40px;">
              <!-- Checkbox mestre que seleciona/desmarca todas dispon√≠veis -->
              <input type="checkbox" id="select-all-checkbox" title="Selecionar/Desmarcar todas">
            </th>
            <th>M√∫sica</th>           <!-- Nome da m√∫sica -->
            <th>Banda</th>            <!-- Nome da banda -->
            <th>Status</th>           <!-- Status no repert√≥rio -->
            <th>A√ß√£o Individual</th>  <!-- Bot√£o de adicionar individual -->
          </tr>
        </thead>
        <tbody>
          <!-- LOOP: Itera por todas as m√∫sicas encontradas -->
          <% @all_songs.each do |song| %>
            <!-- Verifica se m√∫sica j√° est√° no set atual -->
            <% is_in_set = @songs.include?(song) %>
            <!-- Verifica se m√∫sica est√° no repert√≥rio geral do artista -->
            <% artist_song = @artist.artist_songs.find_by(song: song) %>
            
            <!-- Linha com classe CSS diferente se j√° estiver no set -->
            <tr class="<%= 'already-in-set' if is_in_set %>">
              <!-- COLUNA 1: Checkbox de sele√ß√£o -->
              <td>
                <input type="checkbox" 
                        name="song_ids[]" 
                        value="<%= song.id %>" 
                        class="song-checkbox <%= 'available-song' unless is_in_set %>"
                        data-song-name="<%= song.name %>"
                        data-in-set="<%= is_in_set %>"
                        <%= 'disabled' if is_in_set %>>
                        <!-- Checkbox desabilitado se m√∫sica j√° estiver no set -->
              </td>
              
              <!-- COLUNA 2: Nome da m√∫sica -->
              <td>
                <!-- Texto acinzentado se j√° estiver no set -->
                <span class="<%= 'text-muted' if is_in_set %>"><%= song.name %></span>
              </td>
              
              <!-- COLUNA 3: Nome da banda -->
              <td><%= song.band %></td>
              
              <!-- COLUNA 4: Status da m√∫sica -->
              <td>
                <% if artist_song %>
                  <!-- M√∫sica j√° est√° no repert√≥rio geral -->
                  <span style="color: white;">No Banco</span>
                <% else %>
                  <!-- M√∫sica nova, pode ser adicionada -->
                  <span style="color: orange;">Adicionar</span>
                <% end %>
              </td>
              
              <!-- COLUNA 5: A√ß√£o individual -->
              <td>
                <% unless is_in_set %>
                  <!-- BOT√ÉO: Adiciona m√∫sica individual ao set -->
                  <%= button_to "Adicionar", adicionar_musicas_artist_artist_set_path(@artist_set.artist, @artist_set), 
                      method: :post, 
                      params: { song_ids: [song.id] },
                      style: "background-color: #28a745; color: white; padding: 4px 8px; border: none; border-radius: 4px; cursor: pointer; font-size: 12px;",
                      local: true %>
                <% else %>
                  <!-- Placeholder para m√∫sicas j√° no set -->
                  <span style="color: #ccc; font-size: 12px;">-</span>
                <% end %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  <% end %>
<% else %>
  <!-- MENSAGEM: Quando n√£o h√° m√∫sicas para mostrar -->
  <p>Use a busca acima para encontrar m√∫sicas.</p>
<% end %>

<hr>

<!-- ================================ -->
<!-- SE√á√ÉO: A√á√ïES DESTRUTIVAS -->
<!-- ================================ -->
<div>  
  <!-- ‚úÖ BOT√ÉO DUPLICAR -->
  <%= button_to "Duplicar", duplicate_artist_artist_set_path(@artist, artist_set), 
      method: :post,
      style: "background-color: #6c757d; color: white; padding: 6px 12px; border: none; border-radius: 4px; cursor: pointer; font-size: 12px;",
      confirm: "Duplicar setlist '#{artist_set.set_list_name}'?",
      title: "Criar c√≥pia deste setlist" %>
  <!-- BOT√ÉO: Deleta o setlist inteiro -->
  <%= button_to "Deletar Setlist", 
      artist_artist_set_path(@artist_set.artist, @artist_set), 
      method: :delete,
      style: "background-color: #dc3545; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer;",
      confirm: "Tem certeza que deseja deletar este set?" %>
</div>

<!-- ========================================= -->
<!-- SE√á√ÉO: JAVASCRIPT - CONTROLE DE INTERFACE -->
<!-- ========================================= -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // ===========================
  // ELEMENTOS DO DOM
  // ===========================
  // Bot√µes de controle de sele√ß√£o
  const selectAllBtn = document.getElementById('select-all-btn');           // Selecionar todas
  const deselectAllBtn = document.getElementById('deselect-all-btn');       // Desmarcar todas
  const selectAvailableBtn = document.getElementById('select-available-btn'); // Selecionar dispon√≠veis
  const selectAllCheckbox = document.getElementById('select-all-checkbox'); // Checkbox mestre
  
  // Elementos de feedback
  const selectedCountSpan = document.getElementById('selected-count');      // Contador de selecionadas
  const submitBtn = document.getElementById('submit-selected-btn');         // Bot√£o de submiss√£o
  
  // Cole√ß√µes de checkboxes
  const songCheckboxes = document.querySelectorAll('.song-checkbox');       // Todos os checkboxes
  const availableSongCheckboxes = document.querySelectorAll('.song-checkbox.available-song'); // S√≥ os dispon√≠veis

  // ===========================
  // FUN√á√ÉO: ATUALIZAR CONTADOR
  // ===========================
  function updateSelectedCount() {
    // Conta quantos checkboxes est√£o marcados
    const checkedBoxes = document.querySelectorAll('.song-checkbox:checked');
    const count = checkedBoxes.length;
    
    // Atualiza texto do contador com pluraliza√ß√£o correta
    selectedCountSpan.textContent = `${count} m√∫sica${count !== 1 ? 's' : ''} selecionada${count !== 1 ? 's' : ''}`;
    
    // Habilita/desabilita bot√£o de submiss√£o baseado na contagem
    submitBtn.disabled = count === 0;
    submitBtn.style.opacity = count === 0 ? '0.5' : '1';
  }

  // ===========================
  // EVENT LISTENERS
  // ===========================
  
  // Listener para cada checkbox individual
  songCheckboxes.forEach(checkbox => {
    checkbox.addEventListener('change', updateSelectedCount);
  });

  // BOT√ÉO: Selecionar todas (incluindo j√° no set, mas estas ficam desabilitadas)
  selectAllBtn.addEventListener('click', function() {
    songCheckboxes.forEach(checkbox => {
      if (!checkbox.disabled) {  // S√≥ marca as n√£o desabilitadas
        checkbox.checked = true;
      }
    });
    updateSelectedCount();
  });

  // BOT√ÉO: Desmarcar todas as sele√ß√µes
  deselectAllBtn.addEventListener('click', function() {
    songCheckboxes.forEach(checkbox => {
      checkbox.checked = false;
    });
    updateSelectedCount();
  });

  // BOT√ÉO: Selecionar apenas m√∫sicas dispon√≠veis (n√£o j√° no set)
  selectAvailableBtn.addEventListener('click', function() {
    availableSongCheckboxes.forEach(checkbox => {
      checkbox.checked = true;
    });
    updateSelectedCount();
  });

  // CHECKBOX MESTRE: Controla sele√ß√£o de todas as dispon√≠veis
  selectAllCheckbox.addEventListener('change', function() {
    const isChecked = this.checked;
    availableSongCheckboxes.forEach(checkbox => {
      checkbox.checked = isChecked;
    });
    updateSelectedCount();
  });

  // ===========================
  // INICIALIZA√á√ÉO
  // ===========================
  // Executa contador inicial ao carregar a p√°gina
  updateSelectedCount();
});
</script>